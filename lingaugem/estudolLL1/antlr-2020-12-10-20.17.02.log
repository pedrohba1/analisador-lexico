2020-12-10 20:17:01:666 grammar LogManager.java:25 before: (COMBINED_GRAMMAR estudolLL1 (RULES (RULE inicio (BLOCK (ALT PROGRAMA ID corpo))) (RULE corpo (BLOCK (ALT AbreChave secaoVariaveis listaComandos FechaChave))) (RULE secaoVariaveis (BLOCK (ALT VARS Doispontos listDecVariavel PVirg))) (RULE listDecVariavel (BLOCK (ALT TipoInt ID listDecVariavel1) (ALT TipoReal ID listDecVariavel1) (ALT TipoChar ID listDecVariavel1))) (RULE listDecVariavel1 (BLOCK (ALT VIRG TipoInt ID listDecVariavel1) (ALT VIRG TipoReal ID listDecVariavel1) (ALT VIRG TipoChar ID listDecVariavel1) (ALT EPSILON))) (RULE varDec (BLOCK (ALT tipos ID))) (RULE tipos (BLOCK (ALT TipoInt) (ALT TipoReal) (ALT TipoChar))) (RULE bloco (BLOCK (ALT AbreChave listaComandos FechaChave))) (RULE listaComandos (BLOCK (ALT command listaComandos1))) (RULE listaComandos1 (BLOCK (ALT command listaComandos1) (ALT EPSILON))) (RULE command (BLOCK (ALT singleCmd PVirg) (ALT stmt))) (RULE singleCmd (BLOCK (ALT ID OPAtrib cexpr))) (RULE stmt (BLOCK (ALT SE AbreParentese cexpr FechaParentese bloco) (ALT SE AbreParentese cexpr FechaParentese bloco SENAO bloco) (ALT ENQUANTO AbreParentese cexpr FechaParentese bloco) (ALT FACA bloco ENQUANTO cexpr))) (RULE cexpr (BLOCK (ALT expr cexpr1) (ALT expr OPIgual expr cexpr1) (ALT expr OPMaior expr cexpr1) (ALT expr OPMenor expr cexpr1))) (RULE cexpr1 (BLOCK (ALT OPAnd cexpr cexpr1) (ALT OPOr cexpr cexpr1) (ALT EPSILON))) (RULE expr (BLOCK (ALT AbreParentese cexpr FechaParentese expr1) (ALT ID expr1) (ALT INT expr1) (ALT CHAR expr1) (ALT FLOAT expr1))) (RULE expr1 (BLOCK (ALT OPMais expr expr1) (ALT OPMenos expr expr1) (ALT OPDiv expr expr1) (ALT OPMult expr expr1) (ALT EPSILON))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT [0-9])))))) (RULE DIGIT (BLOCK (ALT [0-9]))) (RULE FLOAT (BLOCK (ALT (+ (BLOCK (ALT DIGIT))) (* (BLOCK (ALT DIGIT)))))) (RULE DOT (BLOCK (ALT '.'))) (RULE ID (BLOCK (ALT [a-z] (* (BLOCK (ALT [a-zA-Z0-9])))))) (RULE CHAR (BLOCK (ALT '\'' (BLOCK (ALT [0-9A-Za-z]) (ALT '\\' (BLOCK (ALT [a-f]) (ALT [0-9]) (ALT [1-9] [0-9]) (ALT '1' [0-2] [0-7])))) '\''))) (RULE AbreChave (BLOCK (ALT '{'))) (RULE FechaChave (BLOCK (ALT '}'))) (RULE AbreParentese (BLOCK (ALT '('))) (RULE FechaParentese (BLOCK (ALT ')'))) (RULE PROGRAMA (BLOCK (ALT 'PROGRAMA'))) (RULE VARS (BLOCK (ALT 'VARS'))) (RULE Doispontos (BLOCK (ALT ':'))) (RULE TipoInt (BLOCK (ALT 'INT'))) (RULE TipoReal (BLOCK (ALT 'REAL'))) (RULE TipoChar (BLOCK (ALT 'CHAR'))) (RULE PVirg (BLOCK (ALT ';'))) (RULE OPAtrib (BLOCK (ALT ':='))) (RULE SE (BLOCK (ALT 'SE'))) (RULE SENAO (BLOCK (ALT 'SENAO'))) (RULE ENQUANTO (BLOCK (ALT 'ENQUANTO'))) (RULE FACA (BLOCK (ALT 'FACA'))) (RULE VIRG (BLOCK (ALT ','))) (RULE OPAnd (BLOCK (ALT 'AND'))) (RULE OPOr (BLOCK (ALT 'OR'))) (RULE OPMaior (BLOCK (ALT '>'))) (RULE OPMenor (BLOCK (ALT '<'))) (RULE OPIgual (BLOCK (ALT '=='))) (RULE OPMais (BLOCK (ALT '+'))) (RULE OPDiv (BLOCK (ALT '/'))) (RULE OPMenos (BLOCK (ALT '-'))) (RULE OPMult (BLOCK (ALT '*'))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t\r\n])))) skip)))))
2020-12-10 20:17:01:690 grammar LogManager.java:25 after: (COMBINED_GRAMMAR estudolLL1 (RULES (RULE inicio (BLOCK (ALT PROGRAMA ID corpo))) (RULE corpo (BLOCK (ALT AbreChave secaoVariaveis listaComandos FechaChave))) (RULE secaoVariaveis (BLOCK (ALT VARS Doispontos listDecVariavel PVirg))) (RULE listDecVariavel (BLOCK (ALT TipoInt ID listDecVariavel1) (ALT TipoReal ID listDecVariavel1) (ALT TipoChar ID listDecVariavel1))) (RULE listDecVariavel1 (BLOCK (ALT VIRG TipoInt ID listDecVariavel1) (ALT VIRG TipoReal ID listDecVariavel1) (ALT VIRG TipoChar ID listDecVariavel1) (ALT EPSILON))) (RULE varDec (BLOCK (ALT tipos ID))) (RULE tipos (BLOCK (ALT (SET TipoInt TipoReal TipoChar)))) (RULE bloco (BLOCK (ALT AbreChave listaComandos FechaChave))) (RULE listaComandos (BLOCK (ALT command listaComandos1))) (RULE listaComandos1 (BLOCK (ALT command listaComandos1) (ALT EPSILON))) (RULE command (BLOCK (ALT singleCmd PVirg) (ALT stmt))) (RULE singleCmd (BLOCK (ALT ID OPAtrib cexpr))) (RULE stmt (BLOCK (ALT SE AbreParentese cexpr FechaParentese bloco) (ALT SE AbreParentese cexpr FechaParentese bloco SENAO bloco) (ALT ENQUANTO AbreParentese cexpr FechaParentese bloco) (ALT FACA bloco ENQUANTO cexpr))) (RULE cexpr (BLOCK (ALT expr cexpr1) (ALT expr OPIgual expr cexpr1) (ALT expr OPMaior expr cexpr1) (ALT expr OPMenor expr cexpr1))) (RULE cexpr1 (BLOCK (ALT OPAnd cexpr cexpr1) (ALT OPOr cexpr cexpr1) (ALT EPSILON))) (RULE expr (BLOCK (ALT AbreParentese cexpr FechaParentese expr1) (ALT ID expr1) (ALT INT expr1) (ALT CHAR expr1) (ALT FLOAT expr1))) (RULE expr1 (BLOCK (ALT OPMais expr expr1) (ALT OPMenos expr expr1) (ALT OPDiv expr expr1) (ALT OPMult expr expr1) (ALT EPSILON))) (RULE INT (BLOCK (ALT (+ (BLOCK (ALT [0-9])))))) (RULE DIGIT (BLOCK (ALT [0-9]))) (RULE FLOAT (BLOCK (ALT (+ (BLOCK (ALT DIGIT))) (* (BLOCK (ALT DIGIT)))))) (RULE DOT (BLOCK (ALT '.'))) (RULE ID (BLOCK (ALT [a-z] (* (BLOCK (ALT [a-zA-Z0-9])))))) (RULE CHAR (BLOCK (ALT '\'' (BLOCK (ALT [0-9A-Za-z]) (ALT '\\' (BLOCK (ALT [a-f]) (ALT [0-9]) (ALT [1-9] [0-9]) (ALT '1' [0-2] [0-7])))) '\''))) (RULE AbreChave (BLOCK (ALT '{'))) (RULE FechaChave (BLOCK (ALT '}'))) (RULE AbreParentese (BLOCK (ALT '('))) (RULE FechaParentese (BLOCK (ALT ')'))) (RULE PROGRAMA (BLOCK (ALT 'PROGRAMA'))) (RULE VARS (BLOCK (ALT 'VARS'))) (RULE Doispontos (BLOCK (ALT ':'))) (RULE TipoInt (BLOCK (ALT 'INT'))) (RULE TipoReal (BLOCK (ALT 'REAL'))) (RULE TipoChar (BLOCK (ALT 'CHAR'))) (RULE PVirg (BLOCK (ALT ';'))) (RULE OPAtrib (BLOCK (ALT ':='))) (RULE SE (BLOCK (ALT 'SE'))) (RULE SENAO (BLOCK (ALT 'SENAO'))) (RULE ENQUANTO (BLOCK (ALT 'ENQUANTO'))) (RULE FACA (BLOCK (ALT 'FACA'))) (RULE VIRG (BLOCK (ALT ','))) (RULE OPAnd (BLOCK (ALT 'AND'))) (RULE OPOr (BLOCK (ALT 'OR'))) (RULE OPMaior (BLOCK (ALT '>'))) (RULE OPMenor (BLOCK (ALT '<'))) (RULE OPIgual (BLOCK (ALT '=='))) (RULE OPMais (BLOCK (ALT '+'))) (RULE OPDiv (BLOCK (ALT '/'))) (RULE OPMenos (BLOCK (ALT '-'))) (RULE OPMult (BLOCK (ALT '*'))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t\r\n])))) skip)))))
2020-12-10 20:17:01:715 grammar LogManager.java:25 after extract implicit lexer =(COMBINED_GRAMMAR estudolLL1 (RULES (RULE inicio (BLOCK (ALT PROGRAMA ID corpo))) (RULE corpo (BLOCK (ALT AbreChave secaoVariaveis listaComandos FechaChave))) (RULE secaoVariaveis (BLOCK (ALT VARS Doispontos listDecVariavel PVirg))) (RULE listDecVariavel (BLOCK (ALT TipoInt ID listDecVariavel1) (ALT TipoReal ID listDecVariavel1) (ALT TipoChar ID listDecVariavel1))) (RULE listDecVariavel1 (BLOCK (ALT VIRG TipoInt ID listDecVariavel1) (ALT VIRG TipoReal ID listDecVariavel1) (ALT VIRG TipoChar ID listDecVariavel1) (ALT EPSILON))) (RULE varDec (BLOCK (ALT tipos ID))) (RULE tipos (BLOCK (ALT (SET TipoInt TipoReal TipoChar)))) (RULE bloco (BLOCK (ALT AbreChave listaComandos FechaChave))) (RULE listaComandos (BLOCK (ALT command listaComandos1))) (RULE listaComandos1 (BLOCK (ALT command listaComandos1) (ALT EPSILON))) (RULE command (BLOCK (ALT singleCmd PVirg) (ALT stmt))) (RULE singleCmd (BLOCK (ALT ID OPAtrib cexpr))) (RULE stmt (BLOCK (ALT SE AbreParentese cexpr FechaParentese bloco) (ALT SE AbreParentese cexpr FechaParentese bloco SENAO bloco) (ALT ENQUANTO AbreParentese cexpr FechaParentese bloco) (ALT FACA bloco ENQUANTO cexpr))) (RULE cexpr (BLOCK (ALT expr cexpr1) (ALT expr OPIgual expr cexpr1) (ALT expr OPMaior expr cexpr1) (ALT expr OPMenor expr cexpr1))) (RULE cexpr1 (BLOCK (ALT OPAnd cexpr cexpr1) (ALT OPOr cexpr cexpr1) (ALT EPSILON))) (RULE expr (BLOCK (ALT AbreParentese cexpr FechaParentese expr1) (ALT ID expr1) (ALT INT expr1) (ALT CHAR expr1) (ALT FLOAT expr1))) (RULE expr1 (BLOCK (ALT OPMais expr expr1) (ALT OPMenos expr expr1) (ALT OPDiv expr expr1) (ALT OPMult expr expr1) (ALT EPSILON)))))
2020-12-10 20:17:01:716 grammar LogManager.java:25 lexer =(LEXER_GRAMMAR estudolLL1Lexer (RULES (RULE INT (BLOCK (ALT (+ (BLOCK (ALT [0-9])))))) (RULE DIGIT (BLOCK (ALT [0-9]))) (RULE FLOAT (BLOCK (ALT (+ (BLOCK (ALT DIGIT))) (* (BLOCK (ALT DIGIT)))))) (RULE DOT (BLOCK (ALT '.'))) (RULE ID (BLOCK (ALT [a-z] (* (BLOCK (ALT [a-zA-Z0-9])))))) (RULE CHAR (BLOCK (ALT '\'' (BLOCK (ALT [0-9A-Za-z]) (ALT '\\' (BLOCK (ALT [a-f]) (ALT [0-9]) (ALT [1-9] [0-9]) (ALT '1' [0-2] [0-7])))) '\''))) (RULE AbreChave (BLOCK (ALT '{'))) (RULE FechaChave (BLOCK (ALT '}'))) (RULE AbreParentese (BLOCK (ALT '('))) (RULE FechaParentese (BLOCK (ALT ')'))) (RULE PROGRAMA (BLOCK (ALT 'PROGRAMA'))) (RULE VARS (BLOCK (ALT 'VARS'))) (RULE Doispontos (BLOCK (ALT ':'))) (RULE TipoInt (BLOCK (ALT 'INT'))) (RULE TipoReal (BLOCK (ALT 'REAL'))) (RULE TipoChar (BLOCK (ALT 'CHAR'))) (RULE PVirg (BLOCK (ALT ';'))) (RULE OPAtrib (BLOCK (ALT ':='))) (RULE SE (BLOCK (ALT 'SE'))) (RULE SENAO (BLOCK (ALT 'SENAO'))) (RULE ENQUANTO (BLOCK (ALT 'ENQUANTO'))) (RULE FACA (BLOCK (ALT 'FACA'))) (RULE VIRG (BLOCK (ALT ','))) (RULE OPAnd (BLOCK (ALT 'AND'))) (RULE OPOr (BLOCK (ALT 'OR'))) (RULE OPMaior (BLOCK (ALT '>'))) (RULE OPMenor (BLOCK (ALT '<'))) (RULE OPIgual (BLOCK (ALT '=='))) (RULE OPMais (BLOCK (ALT '+'))) (RULE OPDiv (BLOCK (ALT '/'))) (RULE OPMenos (BLOCK (ALT '-'))) (RULE OPMult (BLOCK (ALT '*'))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t\r\n])))) skip)))))
2020-12-10 20:17:02:062 semantics LogManager.java:25 tokens={EOF=-1, INT=1, DIGIT=2, FLOAT=3, DOT=4, ID=5, CHAR=6, AbreChave=7, FechaChave=8, AbreParentese=9, FechaParentese=10, PROGRAMA=11, VARS=12, Doispontos=13, TipoInt=14, TipoReal=15, TipoChar=16, PVirg=17, OPAtrib=18, SE=19, SENAO=20, ENQUANTO=21, FACA=22, VIRG=23, OPAnd=24, OPOr=25, OPMaior=26, OPMenor=27, OPIgual=28, OPMais=29, OPDiv=30, OPMenos=31, OPMult=32, WS=33}
2020-12-10 20:17:02:062 semantics LogManager.java:25 strings={'.'=4, '{'=7, '}'=8, '('=9, ')'=10, 'PROGRAMA'=11, 'VARS'=12, ':'=13, 'INT'=14, 'REAL'=15, 'CHAR'=16, ';'=17, ':='=18, 'SE'=19, 'SENAO'=20, 'ENQUANTO'=21, 'FACA'=22, ','=23, 'AND'=24, 'OR'=25, '>'=26, '<'=27, '=='=28, '+'=29, '/'=30, '-'=31, '*'=32}
2020-12-10 20:17:02:075 LL1 LogManager.java:25 
DECISION 0 in rule listDecVariavel
2020-12-10 20:17:02:075 LL1 LogManager.java:25 look=[14, 15, 16]
2020-12-10 20:17:02:075 LL1 LogManager.java:25 LL(1)? true
2020-12-10 20:17:02:075 LL1 LogManager.java:25 
DECISION 1 in rule listDecVariavel1
2020-12-10 20:17:02:075 LL1 LogManager.java:25 look=[23, 23, 23, 17]
2020-12-10 20:17:02:075 LL1 LogManager.java:25 LL(1)? false
2020-12-10 20:17:02:076 LL1 LogManager.java:25 
DECISION 2 in rule listaComandos1
2020-12-10 20:17:02:076 LL1 LogManager.java:25 look=[{5, 19, 21..22}, 8]
2020-12-10 20:17:02:076 LL1 LogManager.java:25 LL(1)? true
2020-12-10 20:17:02:076 LL1 LogManager.java:25 
DECISION 3 in rule command
2020-12-10 20:17:02:076 LL1 LogManager.java:25 look=[5, {19, 21..22}]
2020-12-10 20:17:02:076 LL1 LogManager.java:25 LL(1)? true
2020-12-10 20:17:02:076 LL1 LogManager.java:25 
DECISION 4 in rule stmt
2020-12-10 20:17:02:076 LL1 LogManager.java:25 look=[19, 19, 21, 22]
2020-12-10 20:17:02:076 LL1 LogManager.java:25 LL(1)? false
2020-12-10 20:17:02:076 LL1 LogManager.java:25 
DECISION 5 in rule cexpr
2020-12-10 20:17:02:077 LL1 LogManager.java:25 look=[{1, 3, 5..6, 9}, {1, 3, 5..6, 9}, {1, 3, 5..6, 9}, {1, 3, 5..6, 9}]
2020-12-10 20:17:02:077 LL1 LogManager.java:25 LL(1)? false
2020-12-10 20:17:02:077 LL1 LogManager.java:25 
DECISION 6 in rule cexpr1
2020-12-10 20:17:02:077 LL1 LogManager.java:25 look=[24, 25, {5, 8, 10, 17, 19, 21..22, 24..25}]
2020-12-10 20:17:02:077 LL1 LogManager.java:25 LL(1)? false
2020-12-10 20:17:02:077 LL1 LogManager.java:25 
DECISION 7 in rule expr
2020-12-10 20:17:02:077 LL1 LogManager.java:25 look=[9, 5, 1, 6, 3]
2020-12-10 20:17:02:077 LL1 LogManager.java:25 LL(1)? true
2020-12-10 20:17:02:077 LL1 LogManager.java:25 
DECISION 8 in rule expr1
2020-12-10 20:17:02:078 LL1 LogManager.java:25 look=[29, 31, 30, 32, {5, 8, 10, 17, 19, 21..22, 24..32}]
2020-12-10 20:17:02:079 LL1 LogManager.java:25 LL(1)? false
